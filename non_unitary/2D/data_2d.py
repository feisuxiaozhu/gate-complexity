import matplotlib.pyplot as plt
import numpy as np
import itertools

# h = 0, J=1, pure SGD, 10 steps, random sampling from all possible configs.
result = [-9.999579920798487, -7.863723501697461, -10.52876688562239, -8.346837291100888, -3.8716090890724297, -10.021509235741252, -11.777421485973797, -4.073731819740497, -11.84223147231511, -3.9892968556821273, -6.629247580201767, -11.799946090829707, -11.808288010467212, -4.8217823350322675, -10.23966637825388, -6.481731887781512, -7.398225859390074, -8.939579347488523, -11.837439012954095, -6.6920964681958255, -5.484200286018993, -6.902069690804143, -11.602768712013791, -11.893314286584546, -11.843860870245193, -3.993108140886781, -4.389455901761373, -5.640504945178151, -11.188575127210628, -6.884458945286494, -11.70905969231161, -11.320222669987587, -6.397537305631742, -9.936028731725488, -9.759272940554089, -6.849971228682234, -2.3089005675549443, -11.196988231304108, -11.471629071274407, -10.997259593549444]

result=[-6.987174071716843, -6.986881405653559, -6.9810203330115055, -6.973729139600882, -6.9803360472770555, -6.6087921234021545, -6.977617747634044, -5.2574827030799485, -6.988150809318527, -6.979725959738872, -6.784966520461818, -6.902037029517822, -6.748708649395691, 
-6.537796535797477, -6.86519321951788, -6.981472476672325, -6.989614103094913, -6.88137921505643, -6.9779708647039325, -6.786957778771821, -6.338306074016748, -6.656525671151588, -6.858374499710185, -6.801506383009864, -6.972655334376912, -6.976765058420842, -6.947531563772915, -6.988047965810287, -5.608870006013924, -6.963473083169783, -6.911764924766924, -6.988084684978977, -6.992034847835861, -6.972542815185385, -6.5699398363535355, -5.665563899580908, -6.984498320441267, -6.8831016989632055, -6.733913847065385, -6.975766123141448, -6.923417654991293, -6.708795540743077, -5.090131332120412, -6.81269686878817, -6.8790466929634055, -6.977359444984131, -6.837365369871607, -6.987723425011337, -6.974079942618189, -6.354371725549443, -6.692439685363847, -6.921223970201155, -6.943936046040563, -6.873900232842609, -6.984800048707672, -6.98102059488883, -6.283852550836559, -6.979555252898134, -6.69546970730588, -6.982865468804403, -6.980060084629483, -6.987632577008995, -6.98745976129299, -6.978085082799215]
gradient_result = [np.float64(0.8864834717550658), np.float64(1.0195741105375717), np.float64(0.7372312359381972), np.float64(0.898025380691595), np.float64(0.7967870374660235), np.float64(0.9504457616869285), np.float64(0.7344649671222716), np.float64(4.7211225210065555), np.float64(0.9227376058260921), np.float64(0.8325933595440068), np.float64(1.0044439354257846), np.float64(0.6578953048867029), np.float64(1.145032224236601), np.float64(0.8619137228428487), np.float64(0.8228049077746521), np.float64(0.965707106130793), np.float64(0.880196850316495), np.float64(0.7428282627556355), np.float64(1.3321582425412866), np.float64(0.705146215021517), np.float64(0.7712368722101599), np.float64(0.898760403910969), np.float64(0.9516027694952742), np.float64(0.7154610056496084), np.float64(0.9475266426767296), np.float64(5.658942238446486), np.float64(0.5729262254757422), np.float64(0.7694046594511031), np.float64(0.7463453165421604), np.float64(0.8150535772332451), np.float64(0.8414662021406799), np.float64(0.9391837182484809), np.float64(0.8717085361537951), np.float64(1.1108882700581053), np.float64(0.7266455098504799), np.float64(0.8243750882534421), np.float64(0.697829731597326), np.float64(0.8945161362537475), np.float64(0.45753542476646913), np.float64(0.8552312946506121), np.float64(0.48680259717616586), np.float64(1.1559688497752252), np.float64(0.8957558160610701), np.float64(0.8485696218262008), np.float64(0.7824796789309894), np.float64(0.8552791768293414), np.float64(0.8476435580671647), np.float64(0.9816463186895181), np.float64(0.8927578010002892), np.float64(0.7406699762056699), np.float64(3.536761083797108), np.float64(0.7160003647280961), np.float64(1.4920125862377802), np.float64(0.7705271841011103), np.float64(0.7936786601555373), np.float64(0.7596013439054747), np.float64(1.3252823108286709), np.float64(0.9784574569108904), np.float64(0.8124632146787952), np.float64(0.7916324764203736), np.float64(0.4885427954767913), np.float64(0.8116652035142067), np.float64(0.6135721099623566), np.float64(0.8749139949450673)]
j=0
for gradient in result:
    if gradient>-6.0:
        print (j)
    j+=1

test = list(itertools.product([0, 1], repeat=6))
print(test[7])
print(test[28])
print(test[35])
print(test[42])
# plt.figure(figsize=(8, 5)) 

# plt.scatter(result,[0]*len(result),s=10)

# plt.show()

























