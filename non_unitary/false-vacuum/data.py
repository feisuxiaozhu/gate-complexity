import matplotlib.pyplot as plt

#hx=0, hz=0.25, pure SGD, 50 steps
result0_sgd = [-6.491440202728945, -6.490197705734223, -6.489780889744618, -6.487756402427659, -6.479609052358283, -6.200040267494763, -6.4786914579457004, -4.331348483696731, -6.484051887151945, -6.437899189483554, -6.335980557126344, -6.479405773330657, -6.492379520549822, -6.439321084521037, -5.557137328498523, -6.024196079913372, -6.487467871538946, -6.493314696242161, -6.441633328982984, -6.457821114904514, -6.110054953893148, -6.191624784012842, -6.29418812196807, -6.2329552398723775, -6.4849505806367365, -5.760010847379617, -6.33989433943124, -5.466204301096634, -6.339364637645924, -3.4718057549597927, -3.341416472302459, -3.42554649458479, -6.490786658889023, -6.48873468084177, -6.488490491132104, -6.488152933567491, -6.308203127109541, -6.407021733263861, -6.245284738843343, -3.48200254206101, -6.397117457589865, -3.411245908208072, -6.373175696267482, -4.864297995435306, -6.223994379081649, -3.6751702027555497, -3.4661253409342905, -3.4940970050167515, -6.487188917064101, -6.484930954892149, -6.474846009841359, -6.470201554475008, -6.437948365476934, -6.267355014917422, -3.345657163499454, -3.480603661846207, -4.044743762421755, -3.430534839039406, -3.666756900608717, -3.483649311736008, -3.156368297339779, -3.4933021431134685, -3.4489830487516637, -3.4919874759248097]

#hx=0, hz=0.25, pure SGD + ancilla, 50 steps
# result0 = [-6.490629920741333, -6.336451078208992, -6.368898193356106, -6.339570778252534, -6.366821940853651, -6.245808774985936, -6.287229333078951, -6.176743455172681, -6.350663410610312, -6.3861039332319685, -6.171573718495644, -6.096556309604236, -6.425319637729035, -6.1960872867771775, -5.818521716935989, -3.201681536076405, -6.396138647723904, -6.323404738642074, -6.171833387953798, -6.191184133004133, -6.252103509184128, -6.071890533804359, -2.362359333150711, -2.707520731069849, -6.2570801884372385, -6.120492244551949, -2.5534895810015406, -3.274852480398982, -4.411224959578527, -2.859759798632556, -3.2047799767754843, -3.3075397041012202, -6.185508903181568, -3.2512025634220425, -6.352381294395884, -6.175934059486869, -6.382928769149678, -6.057950654621846, -6.141125209392259, -6.055175992506771, -6.253378959429138, -6.062785664857246, -6.0904282049982825, -2.9093251670032707, -6.1830458615229125, -3.110167311055667, -3.171893106686181, -3.2538812691721275, -6.341509174611395, -6.1991548469747775, -3.710848315751293, -6.075304870588509, -6.125784301433709, -2.397986357593622, -3.262198246505147, -3.414733055586674, -6.200491200846523, -6.0833438097607715, -2.6996734906451336, -3.416989252405965, -3.148550371866781, -3.2161452411510583, -3.3136576929047328, -3.491550485698917]

#hx=0.25, hz=0.25, pure SGD + ancilla, 50 steps
result1 =[-6.596810535780154, -6.46246124637441, -6.340606624234171, -6.307818377096493, -6.472285075623758, -6.354054734694846, -6.272185952205647, -6.315070428824311, -6.502504391034155, -6.362465691350212, -6.038641572454342, -6.11452715504493, -5.758016810807423, -5.955964289925465, -5.843520767996005, -6.064336234058303, -6.43293028726501, -2.8212637333619526, -5.951046687838539, -6.227202783292528, -6.320868486869521, -4.437925425541996, -4.207871293753515, -5.6564608265093055, -6.294531256293877, -6.043626720052956, -3.9127421120301236, -3.2581744609399506, -6.0626811462750725, -3.2554374800158956, -3.29905823774801, -3.4799674820064244, -6.5083040085838855, -6.045649017822918, -6.272649022825051, -6.070014932922492, -3.507133999905752, -6.210357483397989, -6.176111379499096, -6.169802827400415, -6.289436304070089, -6.155899822074133, -6.162271714762053, -5.946148541763154, -6.22597855222666, -2.963807631731457, -3.167438125030306, -3.243068163070287, -6.347448018093706, -5.990279217952268, -6.140888118605499, -6.135376202900947, -6.218627654034397, -6.07358172826229, -3.3180932303073343, -3.513809782259157, -6.346583239142666, -6.223861428765001, -4.004069304974262, -3.5438038674301677, -6.167410166692759, -3.208866052665699, -3.441594250818218, -3.647847323546193]

#hx=0.5, hz=0.25, pure SGD + ancilla, 50 steps
result2 =[-6.898818217590281, -6.795165336813896, -6.709679226527575, -6.03941242983374, -6.70728471523198, -6.5914979940302025, -6.488062773792067, -6.538062496298949, -6.750503837053003, -6.636612369481773, -6.287752999223742, -6.424680534921195, -6.494344406337834, -6.506101106837006, -6.2400973840971705, -6.182167119997782, -6.665066578250531, -6.599812276687874, -6.450981376100977, -6.452041755894017, -6.46732075066715, -6.480455138672604, -6.47598207777173, -5.45114369023705, -6.575064045333473, -6.436438132401942, -5.575127883606735, -5.632151377192302, -6.3283678309408415, -4.781259025003979, -4.873576750996744, -3.935738532953304, -6.795643222670461, -6.496444255899989, -6.659944717916917, -6.5284164884161315, -6.350012251617236, -6.496491695164516, -6.462546984176506, -6.471508911685606, -6.44063017100267, -6.475929675948605, -6.46421225777511, -5.905269968079797, -6.524012617643763, -4.315535979664542, -4.701229600479395, -3.861466162678321, -6.682365711703962, -6.572676347997055, -6.479581453744594, -6.474704560106337, -6.354281214939067, -5.149147822785006, -4.262198511797473, -4.3575398912878365, -6.612961964229662, -6.463089472308121, -4.742366242206161, -3.9219838518210164, -6.249507452394546, -3.9146892685996795, -3.9504109072489, -4.118219317532004]

#hx=0.75, hz=0.25, pure SGD + ancilla, 50 steps
result3= [-7.360085266180623, -7.3160236130142495, -7.22615051992417, -7.064356906782419, -7.219127081539953, -6.880796872850067, -7.081922693527648, -6.951832464165429, -7.1829124165039175, -7.093358092595526, -6.952864972202205, -6.924449619416675, -6.92242474238776, -6.955546419920175, -6.699586773588224, -6.661330857533228, -7.137869645998877, -6.993235145007272, -6.986088751384535, -6.958818945263445, -6.976130495615771, -6.963979324471838, -6.15994432973027, -6.109788320177998, -6.965739819836569, -6.954822554797699, -6.51610628368543, -6.148636379348537, -6.615638448792608, -6.094286060996837, -6.12327908741837, -6.406866200324098, -7.326005460085042, -7.119197000677305, -7.032835823173466, -6.99786718967282, -6.941649391096543, -7.008762911578779, -6.961779972894199, -6.840188925858517, -6.870256839556264, -6.974706596357883, -6.951388842167659, -6.849515235619339, -6.946426724526111, -6.4606203080418, -6.8194811165127796, -6.353351156396704, -7.044602386266797, -6.956262166448462, -6.990387768130212, -6.972487896453665, -6.925712460561455, -6.5450353275634185, -6.156809197042565, -6.296591974858696, -6.964121523489888, -6.928005049036983, -6.375536584841646, -6.508154810911888, -6.654749599667985, -6.340809690897099, -6.430550442084251, -6.532451341934988]

#hx=1, hz=0.25, pure SGD + ancilla, 50 steps
result4=[-8.074390997677074, -7.692563410223827, -7.640338265015291, -7.836908961666899, -7.866231350197563, -7.69444312863739, -7.669209258452518, -7.784955915561602, -7.666944867569301, -7.663047860026898, -7.66842669989421, -7.580355366974311, -7.636741041028297, -7.611827997513399, -7.646648620796321, -7.631974480780217, -7.70660326207537, -7.668680904222739, -7.706838434285131, -7.669296351540254, -7.698436537841957, -7.613278522012928, -7.569776200482004, -7.368497375922249, -7.603197937630532, -7.591856157475247, -7.4424636398298505, -7.429663427695394, -7.476485569013927, -7.428317937619461, -7.398935337503129, -7.450253762000683, -7.804520878201621, -7.65102205859617, -7.7211587569799685, -7.673386907933399, -7.608532108568336, -7.678722314971237, -7.6914505001814995, -7.595921429856386, -7.677478808957949, -7.616999562078606, -7.668050680361508, -7.544190465302416, -7.703732364756717, -7.579245611011264, -7.4813697536368275, -7.351250139380675, -7.746662618771578, -7.670077699894595, -7.66716380545205, -7.62629223255182, -7.660798304689628, -7.525894583557026, -7.24623776541862, -7.372569221927207, -7.718774835148798, -7.550924471960075, -7.492313424739802, -7.334890177620856, -7.666853859346799, -7.329116822281814, -7.465540030587689, -7.544893826948417]

list_of_results =[result0_sgd,result1,result2,result3,result4]

rydberg_result = [-59.11568109302986, -58.55386255641352, -59.69371083939536, -59.645231661533245, -57.5745225387988, -39.635726045328745, -58.960874342241254, -56.9370243223584, -60.47482569054154, -60.16803359859705, -60.48420690758114, -60.38881680423345, -59.75685611381669, -59.31248509671128, -60.453897452770306, -59.680248153431286, -58.39227932180748, -54.90611984369913, -59.10908029841463, -58.3375698369756, -56.52662528661834, -38.87406035429827, -58.50217723861105, -39.313274684123044, -59.96992489773363, -59.44044372527771, -60.01009784788182, -59.90486466476113, -57.32563864016703, -55.30066956902336, -59.30762995900205, -57.80898118356346, -60.068475110033546, -59.73101188888013, -60.49454606628186, -60.44036678890054, -59.28716470194714, -58.70140832660954, -60.101938910766684, -58.62715740009847, -60.496031254972074, -60.286086193493844, -60.497824666530086, -60.48284484045002, -60.14021393554718, -59.57407358005911, -60.491784489651174, -59.24416282560054, -59.67068013567657, -57.79478438173671, -60.2365003047845, -59.623579902740445, -58.84392994806284, -56.79793945893621, -59.53840086059002, -57.32691835175676, -60.48849075501187, -60.246772355960346, -60.495986672272956, -60.471609806218716, -59.40828030552143, -58.716799172619176, -59.76622281441947, -58.163305982658805]
smallest_value = max(rydberg_result)
smallest_index = rydberg_result.index(smallest_value)
print(smallest_index, smallest_value)

for i in range(len(rydberg_result)):
    if rydberg_result[i]>-45:
        print(i)


plt.figure(figsize=(8, 5)) 
plt.scatter(rydberg_result, y=[0]*len(rydberg_result), marker='o', s=10)
# for i, numbers in enumerate(list_of_results):
#     y = [i] * len(numbers)  
#     plt.scatter(numbers, y, label=f"hx {i*0.25}", marker='o', s=10)



# plt.axvline(0, color='black', linewidth=0.5, linestyle='--')  
# plt.yticks(range(len(list_of_results)), [f"hx= {i*0.25}" for i in range(len(list_of_results))]) 
# plt.xlabel("Final energy")
# plt.title("50 stpes, pure SGD + ancilla, hz=0.25")
# plt.legend()
# plt.grid(axis='x', linestyle='--', alpha=0.5)

plt.show()


# threshold = 1.5
# target_1=-3.5
# target_2=-6.5
# close_to_target_1 = sum(1 for num in result if abs(num - target_1) <= threshold)
# close_to_target_2 = sum(1 for num in result if abs(num - target_2) <= threshold)
    
# print(close_to_target_1, close_to_target_2)



# y = [0] * len(pure_SGD_result)  # All points are placed on y=0 for 1D effect
# plt.scatter(pure_SGD_result, y, color='b', marker='o', label="Numbers")

# # Formatting
# plt.axhline(0, color='black', linewidth=0.5)  # Draw x-axis
# plt.yticks([])  # Remove y-axis ticks
# plt.xlabel("Numbers")
# plt.title("1D Number Line Plot")
# plt.legend()
# plt.show()
