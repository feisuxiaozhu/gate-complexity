#hx=0, hz=0.25, pure SGD, 50 steps
pure_SGD_result = [-6.491440202728945, -6.490197705734223, -6.489780889744618, -6.487756402427659, -6.479609052358283, -6.200040267494763, -6.4786914579457004, -4.331348483696731, -6.484051887151945, -6.437899189483554, -6.335980557126344, -6.479405773330657, -6.492379520549822, -6.439321084521037, -5.557137328498523, -6.024196079913372, -6.487467871538946, -6.493314696242161, -6.441633328982984, -6.457821114904514, -6.110054953893148, -6.191624784012842, -6.29418812196807, -6.2329552398723775, -6.4849505806367365, -5.760010847379617, -6.33989433943124, -5.466204301096634, -6.339364637645924, -3.4718057549597927, -3.341416472302459, -3.42554649458479, -6.490786658889023, -6.48873468084177, -6.488490491132104, -6.488152933567491, -6.308203127109541, -6.407021733263861, -6.245284738843343, -3.48200254206101, -6.397117457589865, -3.411245908208072, -6.373175696267482, -4.864297995435306, -6.223994379081649, -3.6751702027555497, -3.4661253409342905, -3.4940970050167515, -6.487188917064101, -6.484930954892149, -6.474846009841359, -6.470201554475008, -6.437948365476934, -6.267355014917422, -3.345657163499454, -3.480603661846207, -4.044743762421755, -3.430534839039406, -3.666756900608717, -3.483649311736008, -3.156368297339779, -3.4933021431134685, -3.4489830487516637, -3.4919874759248097]

#hx=1, hz=0, pure SGD + ancilla, 50 steps
[-8.074390997677074, -7.692563410223827, -7.640338265015291, -7.836908961666899, -7.866231350197563, -7.69444312863739, -7.669209258452518, -7.784955915561602, -7.666944867569301, -7.663047860026898, -7.66842669989421, -7.580355366974311, -7.636741041028297, -7.611827997513399, -7.646648620796321, -7.631974480780217, -7.70660326207537, -7.668680904222739, -7.706838434285131, -7.669296351540254, -7.698436537841957, -7.613278522012928, -7.569776200482004, -7.368497375922249, -7.603197937630532, -7.591856157475247, -7.4424636398298505, -7.429663427695394, -7.476485569013927, -7.428317937619461, -7.398935337503129, -7.450253762000683, -7.804520878201621, -7.65102205859617, -7.7211587569799685, -7.673386907933399, -7.608532108568336, -7.678722314971237, -7.6914505001814995, -7.595921429856386, -7.677478808957949, -7.616999562078606, -7.668050680361508, -7.544190465302416, -7.703732364756717, -7.579245611011264, -7.4813697536368275, -7.351250139380675, -7.746662618771578, -7.670077699894595, -7.66716380545205, -7.62629223255182, -7.660798304689628, -7.525894583557026, -7.24623776541862, -7.372569221927207, -7.718774835148798, -7.550924471960075, -7.492313424739802, -7.334890177620856, -7.666853859346799, -7.329116822281814, -7.465540030587689, -7.544893826948417]
threshold = 1.5
target_1=-3.5
target_2=-6.5
close_to_target_1 = sum(1 for num in result if abs(num - target_1) <= threshold)
close_to_target_2 = sum(1 for num in result if abs(num - target_2) <= threshold)
    
print(close_to_target_1, close_to_target_2)




